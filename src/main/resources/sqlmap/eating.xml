<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bit.team.eepp.Mapper.EatingMapper">
	<select id="eatingListCount" resultType="int" parameterType="map">
		<![CDATA[
			SELECT COUNT(eId) FROM EATING where eId > 0
		]]>

		<if test="eCategory != null">
			<choose>
				<when test="eCategory == 'asian_food'">
					AND eCategory = 'asian_food'
				</when>
				<when test="eCategory == 'japanese_food'">
					AND eCategory = 'japanese_food'
				</when>
				<when test="eCategory == 'chinese_food'">
					AND eCategory = 'chinese_food'
				</when>
				<when test="eCategory == 'western_food'">
					AND eCategory = 'western_food'
				</when>
				<when test="eCategory == 'korean_food'">
					AND eCategory = 'korean_food'
				</when>
				<when test="eCategory == 'fusion_food'">
					AND eCategory = 'fusion_food'
				</when>
				<when test="eCategory == 'etc_food'">
					AND eCategory = 'etc_food'
				</when>
			</choose>
		</if>

		<!-- 내용과 제목으로만 검색 -->
		<if test="escri != null">
			<choose>
				<when test='escri.searchType == "t"'>
					AND eTitle LIKE '%' || #{escri.keyword} || '%'
				</when>
				<when test='escri.searchType == "c"'>
					AND eContent LIKE '%' || #{escri.keyword} || '%'
				</when>
				<when test='escri.searchType == "a"'>
					AND (eAddress_new LIKE '%' || #{escri.keyword} || '%' OR eAddress_old LIKE '%' || #{escri.keyword} || '%')
				</when>
				<when test='escri.searchType == "tc"'>
					AND (eTitle LIKE '%' || #{escri.keyword} || '%' OR eContent LIKE '%' || #{escri.keyword} || '%')
				</when>
			</choose>
		</if>
	</select>

		<select id="eatingList" resultType="bit.team.eepp.VO.EatingVO" parameterType="map">
			SELECT * FROM
			(SELECT A.*, ROWNUM AS RNUM, COUNT(*) OVER() AS TOTCNT FROM
			(SELECT eId, eTitle, eThema, eCategory, eDate, eAddress_new, eAddress_old, eTel, eCONTENT, eKeyword_food,
			(SELECT COUNT(*) from review where eating_id = eId) as rvCount,
			(SELECT TRUNC(AVG(rvScore), 1) FROM REVIEW where eating_id = eId GROUP BY eating_id) as rvAVG
			FROM Eating where eId = eId

		<if test="eCategory != null">
			<choose>
				<when test="eCategory == 'asian_food'">
					AND eCategory = 'asian_food'
				</when>
				<when test="eCategory == 'japanese_food'">
					AND eCategory = 'japanese_food'
				</when>
				<when test="eCategory == 'chinese_food'">
					AND eCategory = 'chinese_food'
				</when>
				<when test="eCategory == 'western_food'">
					AND eCategory = 'western_food'
				</when>
				<when test="eCategory == 'korean_food'">
					AND eCategory = 'korean_food'
				</when>
				<when test="eCategory == 'fusion_food'">
					AND eCategory = 'fusion_food'
				</when>
				<when test="eCategory == 'etc_food'">
					AND eCategory = 'etc_food'
				</when>
			</choose>
		</if>

		<if test="escri != null">
			<choose>
				<when test='escri.searchType == "t"'>
					AND eTitle LIKE '%' || #{escri.keyword} || '%'
				</when>
				<when test='escri.searchType == "c"'>
					AND eContent LIKE '%' || #{escri.keyword} || '%'
				</when>
				<when test='escri.searchType == "a"'>
					AND (eAddress_new LIKE '%' || #{escri.keyword} || '%' OR eAddress_old LIKE '%' || #{escri.keyword} || '%')
				</when>
				<when test='escri.searchType == "tc"'>
					AND (eTitle LIKE '%' || #{escri.keyword} || '%' OR eContent LIKE '%' || #{escri.keyword} || '%')
				</when>
			</choose>
		</if>

		ORDER BY
		
		<choose>
			<when test="sortType == 'eDate'">
				 eDate
			</when>
		</choose>

		DESC) A)
		WHERE RNUM BETWEEN #{escri.rowStart} AND #{escri.rowEnd}
	
	</select>
	
	<!-- !!!! 차후 해당 쿼리 수정 필!!!!! 1차 수정(04/06)-->
	<select id="selectOne" resultType="bit.team.eepp.VO.EatingVO">
		SELECT eId, eTitle, eCategory, eDate, eContent, eTel, eAddress_new, eAddress_old, eThema, eKeyword_food,
		(SELECT COUNT(*) FROM REVIEW WHERE eating_id = eId) AS rvCount
		FROM EATING WHERE eId = #{eId};
	</select>
	
	
		
	<insert id="write" parameterType="bit.team.eepp.VO.EatingVO">
		<selectKey keyProperty="eatingVO.eId" resultType="int"
			order="BEFORE">
			SELECT EATING_SEQ.nextval FROM DUAL
		</selectKey>

		INSERT INTO EATING (e.eID, e.eTITLE, e.eCATEGORY, e.eDATE, e.eCONTENT,
		e.eTEL, e.eADDRESS_new, e.eADDRESS_old, e.eGRADE,e.eMAP_1, e.eMAP_2,
		e.eSEARCH_1, e.eSEARCH_2, e.eSEARCH_3)
		VALUES(#{eatingVO.eId},
		#{eatingVO.user_id}, #{eatingVO.eTitle}, #{eatingVO.eCATEGORY},
		SYSDATE, #{eatingVO.eCONTENT}, #{eatingVO.eTEL},
		#{eatingVO.eADDRESS_new}, #{eatingVO.eADDRESS_old}, '', '', '')
	</insert>

	<delete id="delete" parameterType="bit.team.eepp.VO.EatingVO">
		DELETE FROM EATING WHERE eId = #{eId}
	</delete>

	<select id="modifyView" resultType="bit.team.eepp.VO.EatingVO">
		SELECT e.eId, e.eTitle,
		e.eCategory, e.eDate, e.eContent, e.eTel, e.eAddress_new,
		e.eAddress_old, e.eGrade, e.eMap_1, e.eMap_2, e.eSearch_1,
		e.eSearch_2, e.eSearch_3, e.eReview FROM USERS u, EATING e WHERE
		u.USER_ID = e.USER_ID AND eId = #{eId}
	</select>

	<update id="modify" parameterType="bit.team.eepp.VO.EatingVO">
		UPDATE EATING SET eTitle =
		#{eatingVO.eTitle}, eContent = #{eatingVO.eContent}, eDate = SYSDATE
		WHERE eId = #{eatingVO.eId}
	</update>
</mapper>